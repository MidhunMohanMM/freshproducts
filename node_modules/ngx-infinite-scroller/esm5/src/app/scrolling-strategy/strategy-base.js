/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import isNumber from 'is-number';
import { InitialScrollPosition } from '../enum/initial-scroll-position-type.enum';
/**
 * @abstract
 */
var /**
 * @abstract
 */
StrategyBase = /** @class */ (function () {
    function StrategyBase(directive, state) {
        this.directive = directive;
        this.state = state;
    }
    /**
     * @protected
     * @param {?} prevPos
     * @param {?} currentPos
     * @return {?}
     */
    StrategyBase.prototype.wasScrolledDown = /**
     * @protected
     * @param {?} prevPos
     * @param {?} currentPos
     * @return {?}
     */
    function (prevPos, currentPos) {
        return prevPos.scrollTop < currentPos.scrollTop;
    };
    /**
     * @protected
     * @param {?} prevPos
     * @param {?} currentPos
     * @return {?}
     */
    StrategyBase.prototype.wasScrolledUp = /**
     * @protected
     * @param {?} prevPos
     * @param {?} currentPos
     * @return {?}
     */
    function (prevPos, currentPos) {
        return !this.wasScrolledDown(prevPos, currentPos);
    };
    /**
     * @protected
     * @param {?} pos
     * @param {?} scrollPositionTrigger
     * @return {?}
     */
    StrategyBase.prototype.isScrollDownEnough = /**
     * @protected
     * @param {?} pos
     * @param {?} scrollPositionTrigger
     * @return {?}
     */
    function (pos, scrollPositionTrigger) {
        return ((pos.scrollTop + pos.clientHeight) / pos.scrollHeight) > (scrollPositionTrigger / 100);
    };
    /**
     * @protected
     * @param {?} pos
     * @param {?} scrollPositionTrigger
     * @return {?}
     */
    StrategyBase.prototype.isScrollUpEnough = /**
     * @protected
     * @param {?} pos
     * @param {?} scrollPositionTrigger
     * @return {?}
     */
    function (pos, scrollPositionTrigger) {
        return (pos.scrollTop / pos.scrollHeight) < (scrollPositionTrigger / 100);
    };
    /**
     * @protected
     * @param {?} defaultScrollPosition
     * @return {?}
     */
    StrategyBase.prototype.getInitialScrollPositionValue = /**
     * @protected
     * @param {?} defaultScrollPosition
     * @return {?}
     */
    function (defaultScrollPosition) {
        var initialScrollPosition = this.directive.initialScrollPosition;
        if (isNumber(initialScrollPosition)) {
            return Number(initialScrollPosition);
        }
        /** @type {?} */
        var initialScrollPositions = this.getInitialScrollPositions();
        if (initialScrollPosition === InitialScrollPosition.DEFAULT) {
            return initialScrollPositions[defaultScrollPosition];
        }
        return initialScrollPositions[initialScrollPosition];
    };
    /**
     * @private
     * @return {?}
     */
    StrategyBase.prototype.getInitialScrollPositions = /**
     * @private
     * @return {?}
     */
    function () {
        var _a;
        var _b = this.state, scrollHeight = _b.scrollHeight, clientHeight = _b.clientHeight;
        return _a = {},
            _a[InitialScrollPosition.TOP] = 0,
            _a[InitialScrollPosition.MIDDLE] = scrollHeight / 2 - clientHeight / 2,
            _a[InitialScrollPosition.BOTTOM] = scrollHeight,
            _a;
    };
    return StrategyBase;
}());
/**
 * @abstract
 */
export { StrategyBase };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    StrategyBase.prototype.directive;
    /**
     * @type {?}
     * @protected
     */
    StrategyBase.prototype.state;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyYXRlZ3ktYmFzZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1pbmZpbml0ZS1zY3JvbGxlci8iLCJzb3VyY2VzIjpbInNyYy9hcHAvc2Nyb2xsaW5nLXN0cmF0ZWd5L3N0cmF0ZWd5LWJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sUUFBUSxNQUFNLFdBQVcsQ0FBQztBQU1qQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQzs7OztBQUVsRjs7OztJQUNFLHNCQUNZLFNBQXVDLEVBQ3ZDLEtBQTRCO1FBRDVCLGNBQVMsR0FBVCxTQUFTLENBQThCO1FBQ3ZDLFVBQUssR0FBTCxLQUFLLENBQXVCO0lBQ3BDLENBQUM7Ozs7Ozs7SUFFSyxzQ0FBZTs7Ozs7O0lBQXpCLFVBQTBCLE9BQXVCLEVBQUUsVUFBMEI7UUFDM0UsT0FBTyxPQUFPLENBQUMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxTQUFTLENBQUM7SUFDbEQsQ0FBQzs7Ozs7OztJQUVTLG9DQUFhOzs7Ozs7SUFBdkIsVUFBd0IsT0FBdUIsRUFBRSxVQUEwQjtRQUN6RSxPQUFPLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDcEQsQ0FBQzs7Ozs7OztJQUVTLHlDQUFrQjs7Ozs7O0lBQTVCLFVBQTZCLEdBQW1CLEVBQUUscUJBQTZCO1FBQzdFLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLHFCQUFxQixHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ2pHLENBQUM7Ozs7Ozs7SUFFUyx1Q0FBZ0I7Ozs7OztJQUExQixVQUEyQixHQUFtQixFQUFFLHFCQUE2QjtRQUMzRSxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUM1RSxDQUFDOzs7Ozs7SUFFUyxvREFBNkI7Ozs7O0lBQXZDLFVBQXdDLHFCQUE0QztRQUMxRSxJQUFBLDREQUFxQjtRQUU3QixJQUFJLFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFO1lBQ25DLE9BQU8sTUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUM7U0FDdEM7O1lBRUssc0JBQXNCLEdBQThCLElBQUksQ0FBQyx5QkFBeUIsRUFBRTtRQUUxRixJQUFJLHFCQUFxQixLQUFLLHFCQUFxQixDQUFDLE9BQU8sRUFBRTtZQUMzRCxPQUFPLHNCQUFzQixDQUFDLHFCQUFxQixDQUFDLENBQUM7U0FDdEQ7UUFFRCxPQUFPLHNCQUFzQixDQUFDLHFCQUFxQixDQUFDLENBQUM7SUFDdkQsQ0FBQzs7Ozs7SUFFTyxnREFBeUI7Ozs7SUFBakM7O1FBQ1EsSUFBQSxlQUEyQyxFQUF6Qyw4QkFBWSxFQUFFLDhCQUEyQjtRQUVqRDtZQUNFLEdBQUMscUJBQXFCLENBQUMsR0FBRyxJQUFHLENBQUM7WUFDOUIsR0FBQyxxQkFBcUIsQ0FBQyxNQUFNLElBQUcsWUFBWSxHQUFHLENBQUMsR0FBRyxZQUFZLEdBQUcsQ0FBQztZQUNuRSxHQUFDLHFCQUFxQixDQUFDLE1BQU0sSUFBRyxZQUFZO2VBQzVDO0lBQ0osQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FBQyxBQS9DRCxJQStDQzs7Ozs7Ozs7OztJQTdDRyxpQ0FBaUQ7Ozs7O0lBQ2pELDZCQUFzQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpc051bWJlciBmcm9tICdpcy1udW1iZXInO1xuXG5pbXBvcnQgeyBOZ3hJbmZpbml0ZVNjcm9sbGVyRGlyZWN0aXZlIH0gZnJvbSAnLi4vbmd4LWluZmluaXRlLXNjcm9sbGVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEaXJlY3RpdmVTdGF0ZVNlcnZpY2UgfSBmcm9tICcuLi9kaXJlY3RpdmUtc3RhdGUuc2VydmljZSc7XG5cbmltcG9ydCB7IFNjcm9sbFBvc2l0aW9uIH0gZnJvbSAnLi4vbW9kZWwvc2Nyb2xsLXBvc2l0aW9uLm1vZGVsJztcbmltcG9ydCB7IEluaXRpYWxTY3JvbGxQb3NpdGlvbiB9IGZyb20gJy4uL2VudW0vaW5pdGlhbC1zY3JvbGwtcG9zaXRpb24tdHlwZS5lbnVtJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFN0cmF0ZWd5QmFzZSB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBkaXJlY3RpdmU6IE5neEluZmluaXRlU2Nyb2xsZXJEaXJlY3RpdmUsXG4gICAgcHJvdGVjdGVkIHN0YXRlOiBEaXJlY3RpdmVTdGF0ZVNlcnZpY2VcbiAgKSB7IH1cblxuICBwcm90ZWN0ZWQgd2FzU2Nyb2xsZWREb3duKHByZXZQb3M6IFNjcm9sbFBvc2l0aW9uLCBjdXJyZW50UG9zOiBTY3JvbGxQb3NpdGlvbik6IGJvb2xlYW4ge1xuICAgIHJldHVybiBwcmV2UG9zLnNjcm9sbFRvcCA8IGN1cnJlbnRQb3Muc2Nyb2xsVG9wO1xuICB9XG5cbiAgcHJvdGVjdGVkIHdhc1Njcm9sbGVkVXAocHJldlBvczogU2Nyb2xsUG9zaXRpb24sIGN1cnJlbnRQb3M6IFNjcm9sbFBvc2l0aW9uKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICF0aGlzLndhc1Njcm9sbGVkRG93bihwcmV2UG9zLCBjdXJyZW50UG9zKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBpc1Njcm9sbERvd25Fbm91Z2gocG9zOiBTY3JvbGxQb3NpdGlvbiwgc2Nyb2xsUG9zaXRpb25UcmlnZ2VyOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKChwb3Muc2Nyb2xsVG9wICsgcG9zLmNsaWVudEhlaWdodCkgLyBwb3Muc2Nyb2xsSGVpZ2h0KSA+IChzY3JvbGxQb3NpdGlvblRyaWdnZXIgLyAxMDApO1xuICB9XG5cbiAgcHJvdGVjdGVkIGlzU2Nyb2xsVXBFbm91Z2gocG9zOiBTY3JvbGxQb3NpdGlvbiwgc2Nyb2xsUG9zaXRpb25UcmlnZ2VyOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKHBvcy5zY3JvbGxUb3AgLyBwb3Muc2Nyb2xsSGVpZ2h0KSA8IChzY3JvbGxQb3NpdGlvblRyaWdnZXIgLyAxMDApO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldEluaXRpYWxTY3JvbGxQb3NpdGlvblZhbHVlKGRlZmF1bHRTY3JvbGxQb3NpdGlvbjogSW5pdGlhbFNjcm9sbFBvc2l0aW9uKTogbnVtYmVyIHtcbiAgICBjb25zdCB7IGluaXRpYWxTY3JvbGxQb3NpdGlvbiB9ID0gdGhpcy5kaXJlY3RpdmU7XG5cbiAgICBpZiAoaXNOdW1iZXIoaW5pdGlhbFNjcm9sbFBvc2l0aW9uKSkge1xuICAgICAgcmV0dXJuIE51bWJlcihpbml0aWFsU2Nyb2xsUG9zaXRpb24pO1xuICAgIH1cblxuICAgIGNvbnN0IGluaXRpYWxTY3JvbGxQb3NpdGlvbnM6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB0aGlzLmdldEluaXRpYWxTY3JvbGxQb3NpdGlvbnMoKTtcblxuICAgIGlmIChpbml0aWFsU2Nyb2xsUG9zaXRpb24gPT09IEluaXRpYWxTY3JvbGxQb3NpdGlvbi5ERUZBVUxUKSB7XG4gICAgICByZXR1cm4gaW5pdGlhbFNjcm9sbFBvc2l0aW9uc1tkZWZhdWx0U2Nyb2xsUG9zaXRpb25dO1xuICAgIH1cblxuICAgIHJldHVybiBpbml0aWFsU2Nyb2xsUG9zaXRpb25zW2luaXRpYWxTY3JvbGxQb3NpdGlvbl07XG4gIH1cblxuICBwcml2YXRlIGdldEluaXRpYWxTY3JvbGxQb3NpdGlvbnMoKTogeyBba2V5OiBzdHJpbmddOiBudW1iZXIgfSB7XG4gICAgY29uc3QgeyBzY3JvbGxIZWlnaHQsIGNsaWVudEhlaWdodCB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiB7XG4gICAgICBbSW5pdGlhbFNjcm9sbFBvc2l0aW9uLlRPUF06IDAsXG4gICAgICBbSW5pdGlhbFNjcm9sbFBvc2l0aW9uLk1JRERMRV06IHNjcm9sbEhlaWdodCAvIDIgLSBjbGllbnRIZWlnaHQgLyAyLFxuICAgICAgW0luaXRpYWxTY3JvbGxQb3NpdGlvbi5CT1RUT01dOiBzY3JvbGxIZWlnaHQsXG4gICAgfTtcbiAgfVxufVxuIl19