/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DirectiveStateService = /** @class */ (function () {
    function DirectiveStateService() {
    }
    Object.defineProperty(DirectiveStateService.prototype, "scrollTop", {
        get: /**
         * @return {?}
         */
        function () {
            return this._el.nativeElement.scrollTop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "scrollHeight", {
        get: /**
         * @return {?}
         */
        function () {
            return this._el.nativeElement.scrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "clientHeight", {
        get: /**
         * @return {?}
         */
        function () {
            return this._el.nativeElement.clientHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "initMode", {
        get: /**
         * @return {?}
         */
        function () {
            return this._initMode;
        },
        set: /**
         * @param {?} initMode
         * @return {?}
         */
        function (initMode) {
            this._initMode = initMode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "scrollStreamActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this._scrollStreamActive;
        },
        set: /**
         * @param {?} active
         * @return {?}
         */
        function (active) {
            this._scrollStreamActive = active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "previousScrollPositionpUpdated", {
        get: /**
         * @return {?}
         */
        function () {
            return this._previousScrollPositionpUpdated;
        },
        set: /**
         * @param {?} previousScrollPositionpUpdated
         * @return {?}
         */
        function (previousScrollPositionpUpdated) {
            this._previousScrollPositionpUpdated = previousScrollPositionpUpdated;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "previousScrollTop", {
        get: /**
         * @return {?}
         */
        function () {
            return this._previousScrollTop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "previousScrollHeight", {
        get: /**
         * @return {?}
         */
        function () {
            return this._previousScrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} params
     * @return {?}
     */
    DirectiveStateService.prototype.setup = /**
     * @param {?} params
     * @return {?}
     */
    function (params) {
        this._el = params.el;
        this._initMode = params.initMode;
        this._scrollStreamActive = params.scrollStreamActive;
        this._previousScrollPositionpUpdated = params.previousScrollPositionpUpdated;
        this.updatePreviousScrollTop();
        this.updatePreviousScrollHeight();
    };
    /**
     * @return {?}
     */
    DirectiveStateService.prototype.updatePreviousScrollTop = /**
     * @return {?}
     */
    function () {
        this._previousScrollTop = this._el.nativeElement.scrollTop;
    };
    /**
     * @return {?}
     */
    DirectiveStateService.prototype.updatePreviousScrollHeight = /**
     * @return {?}
     */
    function () {
        this._previousScrollHeight = this._el.nativeElement.scrollHeight;
    };
    return DirectiveStateService;
}());
export { DirectiveStateService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DirectiveStateService.prototype._el;
    /**
     * @type {?}
     * @private
     */
    DirectiveStateService.prototype._initMode;
    /**
     * @type {?}
     * @private
     */
    DirectiveStateService.prototype._scrollStreamActive;
    /**
     * @type {?}
     * @private
     */
    DirectiveStateService.prototype._previousScrollPositionpUpdated;
    /**
     * @type {?}
     * @private
     */
    DirectiveStateService.prototype._previousScrollTop;
    /**
     * @type {?}
     * @private
     */
    DirectiveStateService.prototype._previousScrollHeight;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlLXN0YXRlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaW5maW5pdGUtc2Nyb2xsZXIvIiwic291cmNlcyI6WyJzcmMvYXBwL2RpcmVjdGl2ZS1zdGF0ZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQTtJQUFBO0lBK0VBLENBQUM7SUE3RUMsc0JBQVcsNENBQVM7Ozs7UUFBcEI7WUFDRSxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQztRQUMxQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLCtDQUFZOzs7O1FBQXZCO1lBQ0UsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUM7UUFDN0MsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVywrQ0FBWTs7OztRQUF2QjtZQUNFLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDO1FBQzdDLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsMkNBQVE7Ozs7UUFBbkI7WUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDeEIsQ0FBQzs7Ozs7UUFFRCxVQUFvQixRQUFpQjtZQUNuQyxJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztRQUM1QixDQUFDOzs7T0FKQTtJQU1ELHNCQUFXLHFEQUFrQjs7OztRQUE3QjtZQUNFLE9BQU8sSUFBSSxDQUFDLG1CQUFtQixDQUFDO1FBQ2xDLENBQUM7Ozs7O1FBRUQsVUFBOEIsTUFBZTtZQUMzQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsTUFBTSxDQUFDO1FBQ3BDLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsaUVBQThCOzs7O1FBQXpDO1lBQ0UsT0FBTyxJQUFJLENBQUMsK0JBQStCLENBQUM7UUFDOUMsQ0FBQzs7Ozs7UUFFRCxVQUEwQyw4QkFBdUM7WUFDL0UsSUFBSSxDQUFDLCtCQUErQixHQUFHLDhCQUE4QixDQUFDO1FBQ3hFLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsb0RBQWlCOzs7O1FBQTVCO1lBQ0UsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUM7UUFDakMsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVyx1REFBb0I7Ozs7UUFBL0I7WUFDRSxPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQztRQUNwQyxDQUFDOzs7T0FBQTs7Ozs7SUFjTSxxQ0FBSzs7OztJQUFaLFVBQWEsTUFLWjtRQUNDLElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDakMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQztRQUNyRCxJQUFJLENBQUMsK0JBQStCLEdBQUcsTUFBTSxDQUFDLDhCQUE4QixDQUFDO1FBQzdFLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO1FBQy9CLElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO0lBQ3BDLENBQUM7Ozs7SUFFTSx1REFBdUI7OztJQUE5QjtRQUNFLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUM7SUFDN0QsQ0FBQzs7OztJQUVNLDBEQUEwQjs7O0lBQWpDO1FBQ0UsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQztJQUNuRSxDQUFDO0lBQ0gsNEJBQUM7QUFBRCxDQUFDLEFBL0VELElBK0VDOzs7Ozs7O0lBakNDLG9DQUF3Qjs7Ozs7SUFFeEIsMENBQTJCOzs7OztJQUUzQixvREFBcUM7Ozs7O0lBRXJDLGdFQUFpRDs7Ozs7SUFFakQsbURBQW1DOzs7OztJQUVuQyxzREFBc0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBjbGFzcyBEaXJlY3RpdmVTdGF0ZVNlcnZpY2Uge1xuXG4gIHB1YmxpYyBnZXQgc2Nyb2xsVG9wKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsVG9wO1xuICB9XG5cbiAgcHVibGljIGdldCBzY3JvbGxIZWlnaHQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fZWwubmF0aXZlRWxlbWVudC5zY3JvbGxIZWlnaHQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGNsaWVudEhlaWdodCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9lbC5uYXRpdmVFbGVtZW50LmNsaWVudEhlaWdodDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgaW5pdE1vZGUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2luaXRNb2RlO1xuICB9XG5cbiAgcHVibGljIHNldCBpbml0TW9kZShpbml0TW9kZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2luaXRNb2RlID0gaW5pdE1vZGU7XG4gIH1cblxuICBwdWJsaWMgZ2V0IHNjcm9sbFN0cmVhbUFjdGl2ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fc2Nyb2xsU3RyZWFtQWN0aXZlO1xuICB9XG5cbiAgcHVibGljIHNldCBzY3JvbGxTdHJlYW1BY3RpdmUoYWN0aXZlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fc2Nyb2xsU3RyZWFtQWN0aXZlID0gYWN0aXZlO1xuICB9XG5cbiAgcHVibGljIGdldCBwcmV2aW91c1Njcm9sbFBvc2l0aW9ucFVwZGF0ZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3ByZXZpb3VzU2Nyb2xsUG9zaXRpb25wVXBkYXRlZDtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgcHJldmlvdXNTY3JvbGxQb3NpdGlvbnBVcGRhdGVkKHByZXZpb3VzU2Nyb2xsUG9zaXRpb25wVXBkYXRlZDogYm9vbGVhbikge1xuICAgIHRoaXMuX3ByZXZpb3VzU2Nyb2xsUG9zaXRpb25wVXBkYXRlZCA9IHByZXZpb3VzU2Nyb2xsUG9zaXRpb25wVXBkYXRlZDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgcHJldmlvdXNTY3JvbGxUb3AoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fcHJldmlvdXNTY3JvbGxUb3A7XG4gIH1cblxuICBwdWJsaWMgZ2V0IHByZXZpb3VzU2Nyb2xsSGVpZ2h0KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3ByZXZpb3VzU2Nyb2xsSGVpZ2h0O1xuICB9XG5cbiAgcHJpdmF0ZSBfZWw6IEVsZW1lbnRSZWY7XG5cbiAgcHJpdmF0ZSBfaW5pdE1vZGU6IGJvb2xlYW47XG5cbiAgcHJpdmF0ZSBfc2Nyb2xsU3RyZWFtQWN0aXZlOiBib29sZWFuO1xuXG4gIHByaXZhdGUgX3ByZXZpb3VzU2Nyb2xsUG9zaXRpb25wVXBkYXRlZDogYm9vbGVhbjtcblxuICBwcml2YXRlIF9wcmV2aW91c1Njcm9sbFRvcDogbnVtYmVyO1xuXG4gIHByaXZhdGUgX3ByZXZpb3VzU2Nyb2xsSGVpZ2h0OiBudW1iZXI7XG5cbiAgcHVibGljIHNldHVwKHBhcmFtczoge1xuICAgIGVsOiBFbGVtZW50UmVmLFxuICAgIGluaXRNb2RlOiBib29sZWFuLFxuICAgIHNjcm9sbFN0cmVhbUFjdGl2ZTogYm9vbGVhbixcbiAgICBwcmV2aW91c1Njcm9sbFBvc2l0aW9ucFVwZGF0ZWQ6IGJvb2xlYW5cbiAgfSk6IHZvaWQge1xuICAgIHRoaXMuX2VsID0gcGFyYW1zLmVsO1xuICAgIHRoaXMuX2luaXRNb2RlID0gcGFyYW1zLmluaXRNb2RlO1xuICAgIHRoaXMuX3Njcm9sbFN0cmVhbUFjdGl2ZSA9IHBhcmFtcy5zY3JvbGxTdHJlYW1BY3RpdmU7XG4gICAgdGhpcy5fcHJldmlvdXNTY3JvbGxQb3NpdGlvbnBVcGRhdGVkID0gcGFyYW1zLnByZXZpb3VzU2Nyb2xsUG9zaXRpb25wVXBkYXRlZDtcbiAgICB0aGlzLnVwZGF0ZVByZXZpb3VzU2Nyb2xsVG9wKCk7XG4gICAgdGhpcy51cGRhdGVQcmV2aW91c1Njcm9sbEhlaWdodCgpO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZVByZXZpb3VzU2Nyb2xsVG9wKCk6IHZvaWQge1xuICAgIHRoaXMuX3ByZXZpb3VzU2Nyb2xsVG9wID0gdGhpcy5fZWwubmF0aXZlRWxlbWVudC5zY3JvbGxUb3A7XG4gIH1cblxuICBwdWJsaWMgdXBkYXRlUHJldmlvdXNTY3JvbGxIZWlnaHQoKTogdm9pZCB7XG4gICAgdGhpcy5fcHJldmlvdXNTY3JvbGxIZWlnaHQgPSB0aGlzLl9lbC5uYXRpdmVFbGVtZW50LnNjcm9sbEhlaWdodDtcbiAgfVxufVxuIl19