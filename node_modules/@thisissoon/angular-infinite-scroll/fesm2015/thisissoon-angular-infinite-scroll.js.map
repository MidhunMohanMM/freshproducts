{"version":3,"file":"thisissoon-angular-infinite-scroll.js.map","sources":["ng://@thisissoon/angular-infinite-scroll/app/infinite-scroll/shared/events.ts","ng://@thisissoon/angular-infinite-scroll/app/infinite-scroll/infinite-scroll.directive.ts","ng://@thisissoon/angular-infinite-scroll/app/infinite-scroll/infinite-scroll.module.ts"],"sourcesContent":["export const eventPathScroll = [\n  '$event.target.scrollTop',\n  '$event.target.scrollHeight',\n  '$event.target.offsetHeight',\n];\nexport const eventScroll = 'scroll';\n","import {\n  Directive,\n  AfterViewInit,\n  OnDestroy,\n  HostListener,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil, filter, map } from 'rxjs/operators';\n\nimport { Scroll } from './shared/scroll.model';\nimport * as events from './shared/events';\n\n/**\n * @example\n * ```html\n * <div\n *   class=\"foo\"\n *   snInfiniteScroll\n *   (scrollEnd)=\"onScrollEnd()\"\n *   [offset]=\"100\"\n *   [debounce]=\"123\"\n *   [disabled]=\"disabled\">\n * </div>\n * ```\n *\n */\n@Directive({\n  selector: '[snInfiniteScroll]',\n})\nexport class InfiniteScrollDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Event that will be triggered when user has scrolled to\n   * bottom of the element\n   */\n  @Output() public scrollEnd = new EventEmitter<void>();\n  /**\n   * An offset from the bottom of the element to trigger\n   * `scrollEnd` event\n   */\n  @Input() public offset = 0;\n  /**\n   * Specify debounce duration in ms\n   */\n  @Input() public debounce = 100;\n  /**\n   * If true then `scrollEnd` event should NOT be emitted\n   */\n  @Input() public disabled = false;\n  /**\n   * Emits a new value on element scroll event\n   */\n  public scroll$: Subject<Scroll> = new Subject<Scroll>();\n  /**\n   * Completes on component destroy lifecycle event\n   * used to unsubscribe from infinite observables\n   *\n   */\n  private ngUnsubscribe$ = new Subject<void>();\n  /**\n   * Subscribe to `scroll$` observable and emit `scrollEnd` event\n   * when element scroll position is at the end of the element\n   */\n  public ngAfterViewInit(): void {\n    this.scroll$\n      .pipe(\n        takeUntil(this.ngUnsubscribe$),\n        debounceTime(this.debounce),\n        map(scroll => {\n          const y = scroll.y + this.offset;\n          return { y, height: scroll.height };\n        }),\n        filter(() => !this.disabled),\n        filter(scroll => scroll.y >= scroll.height),\n      )\n      .subscribe(() => this.scrollEnd.emit());\n  }\n  /**\n   * On element scroll event emit next `scroll$` observable value\n   */\n  @HostListener(events.eventScroll, events.eventPathScroll)\n  public onScroll(\n    scrollY: number,\n    scrollheight: number,\n    offsetHeight: number,\n  ): void {\n    const height = scrollheight;\n    const y = scrollY + offsetHeight;\n    this.scroll$.next({ y, height });\n  }\n  /**\n   * trigger `ngUnsubscribe` complete on\n   * component destroy lifecycle hook\n   */\n  public ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n    this.ngUnsubscribe$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n/**\n * A simple infinite scrolling module for Angular which\n * emits an event when an element has been scrolled to the bottom.\n */\n@NgModule({\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n})\nexport class InfiniteScrollModule {}\n"],"names":["events.eventScroll","events.eventPathScroll"],"mappings":";;;;;;;;;AAAA,MAAa,eAAe,GAAG;IAC7B,yBAAyB;IACzB,4BAA4B;IAC5B,4BAA4B;CAC7B;;AACD,MAAa,WAAW,GAAG,QAAQ;;;;;;ACLnC;;;;;;;;;;;;;;AAgCA,MAAa,uBAAuB;IAHpC;;;;;QAQmB,cAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;;;;;QAKtC,WAAM,GAAG,CAAC,CAAC;;;;QAIX,aAAQ,GAAG,GAAG,CAAC;;;;QAIf,aAAQ,GAAG,KAAK,CAAC;;;;QAI1B,YAAO,GAAoB,IAAI,OAAO,EAAU,CAAC;;;;;;QAMhD,mBAAc,GAAG,IAAI,OAAO,EAAQ,CAAC;KAwC9C;;;;;;IAnCQ,eAAe;QACpB,IAAI,CAAC,OAAO;aACT,IAAI,CACH,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,EAC9B,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC3B,GAAG,CAAC,MAAM;;kBACF,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM;YAChC,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC;SACrC,CAAC,EACF,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC5B,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAC5C;aACA,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;KAC3C;;;;;;;;IAKM,QAAQ,CACb,OAAe,EACf,YAAoB,EACpB,YAAoB;;cAEd,MAAM,GAAG,YAAY;;cACrB,CAAC,GAAG,OAAO,GAAG,YAAY;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;KAClC;;;;;;IAKM,WAAW;QAChB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAChC;;;YAtEF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;aAC/B;;;wBAME,MAAM;qBAKN,KAAK;uBAIL,KAAK;uBAIL,KAAK;uBAgCL,YAAY,SAACA,WAAkB,EAAEC,eAAsB;;;;;;;AClF1D;;;;AAYA,MAAa,oBAAoB;;;YAJhC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;gBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;aACnC;;;;;;;;;;;;;;;"}
