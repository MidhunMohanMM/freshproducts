{"version":3,"file":"thisissoon-angular-infinite-scroll.umd.js.map","sources":["ng://@thisissoon/angular-infinite-scroll/app/infinite-scroll/shared/events.ts","ng://@thisissoon/angular-infinite-scroll/app/infinite-scroll/infinite-scroll.directive.ts","ng://@thisissoon/angular-infinite-scroll/app/infinite-scroll/infinite-scroll.module.ts"],"sourcesContent":["export const eventPathScroll = [\n  '$event.target.scrollTop',\n  '$event.target.scrollHeight',\n  '$event.target.offsetHeight',\n];\nexport const eventScroll = 'scroll';\n","import {\n  Directive,\n  AfterViewInit,\n  OnDestroy,\n  HostListener,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime, takeUntil, filter, map } from 'rxjs/operators';\n\nimport { Scroll } from './shared/scroll.model';\nimport * as events from './shared/events';\n\n/**\n * @example\n * ```html\n * <div\n *   class=\"foo\"\n *   snInfiniteScroll\n *   (scrollEnd)=\"onScrollEnd()\"\n *   [offset]=\"100\"\n *   [debounce]=\"123\"\n *   [disabled]=\"disabled\">\n * </div>\n * ```\n *\n */\n@Directive({\n  selector: '[snInfiniteScroll]',\n})\nexport class InfiniteScrollDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Event that will be triggered when user has scrolled to\n   * bottom of the element\n   */\n  @Output() public scrollEnd = new EventEmitter<void>();\n  /**\n   * An offset from the bottom of the element to trigger\n   * `scrollEnd` event\n   */\n  @Input() public offset = 0;\n  /**\n   * Specify debounce duration in ms\n   */\n  @Input() public debounce = 100;\n  /**\n   * If true then `scrollEnd` event should NOT be emitted\n   */\n  @Input() public disabled = false;\n  /**\n   * Emits a new value on element scroll event\n   */\n  public scroll$: Subject<Scroll> = new Subject<Scroll>();\n  /**\n   * Completes on component destroy lifecycle event\n   * used to unsubscribe from infinite observables\n   *\n   */\n  private ngUnsubscribe$ = new Subject<void>();\n  /**\n   * Subscribe to `scroll$` observable and emit `scrollEnd` event\n   * when element scroll position is at the end of the element\n   */\n  public ngAfterViewInit(): void {\n    this.scroll$\n      .pipe(\n        takeUntil(this.ngUnsubscribe$),\n        debounceTime(this.debounce),\n        map(scroll => {\n          const y = scroll.y + this.offset;\n          return { y, height: scroll.height };\n        }),\n        filter(() => !this.disabled),\n        filter(scroll => scroll.y >= scroll.height),\n      )\n      .subscribe(() => this.scrollEnd.emit());\n  }\n  /**\n   * On element scroll event emit next `scroll$` observable value\n   */\n  @HostListener(events.eventScroll, events.eventPathScroll)\n  public onScroll(\n    scrollY: number,\n    scrollheight: number,\n    offsetHeight: number,\n  ): void {\n    const height = scrollheight;\n    const y = scrollY + offsetHeight;\n    this.scroll$.next({ y, height });\n  }\n  /**\n   * trigger `ngUnsubscribe` complete on\n   * component destroy lifecycle hook\n   */\n  public ngOnDestroy(): void {\n    this.ngUnsubscribe$.next();\n    this.ngUnsubscribe$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { InfiniteScrollDirective } from './infinite-scroll.directive';\n\n/**\n * A simple infinite scrolling module for Angular which\n * emits an event when an element has been scrolled to the bottom.\n */\n@NgModule({\n  declarations: [InfiniteScrollDirective],\n  exports: [InfiniteScrollDirective],\n})\nexport class InfiniteScrollModule {}\n"],"names":["EventEmitter","Subject","takeUntil","debounceTime","map","filter","Directive","Output","Input","HostListener","events.eventScroll","events.eventPathScroll","NgModule"],"mappings":";;;;;;;;;;;AAAA,QAAa,eAAe,GAAG;QAC7B,yBAAyB;QACzB,4BAA4B;QAC5B,4BAA4B;KAC7B;;AACD,QAAa,WAAW,GAAG,QAAQ;;;;;;ACLnC;;;;;;;;;;;;;;AA6BA;QAAA;;;;;YAQmB,cAAS,GAAG,IAAIA,iBAAY,EAAQ,CAAC;;;;;YAKtC,WAAM,GAAG,CAAC,CAAC;;;;YAIX,aAAQ,GAAG,GAAG,CAAC;;;;YAIf,aAAQ,GAAG,KAAK,CAAC;;;;YAI1B,YAAO,GAAoB,IAAIC,YAAO,EAAU,CAAC;;;;;;YAMhD,mBAAc,GAAG,IAAIA,YAAO,EAAQ,CAAC;SAwC9C;;;;;;;;;;QAnCQ,iDAAe;;;;;YAAtB;gBAAA,iBAaC;gBAZC,IAAI,CAAC,OAAO;qBACT,IAAI,CACHC,mBAAS,CAAC,IAAI,CAAC,cAAc,CAAC,EAC9BC,sBAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC3BC,aAAG,CAAC,UAAA,MAAM;;wBACF,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,KAAI,CAAC,MAAM;oBAChC,OAAO,EAAE,CAAC,GAAA,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC;iBACrC,CAAC,EACFC,gBAAM,CAAC,cAAM,OAAA,CAAC,KAAI,CAAC,QAAQ,GAAA,CAAC,EAC5BA,gBAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,GAAA,CAAC,CAC5C;qBACA,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,GAAA,CAAC,CAAC;aAC3C;;;;;;;;;;;QAKM,0CAAQ;;;;;;;YADf,UAEE,OAAe,EACf,YAAoB,EACpB,YAAoB;;oBAEd,MAAM,GAAG,YAAY;;oBACrB,CAAC,GAAG,OAAO,GAAG,YAAY;gBAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAA,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;aAClC;;;;;;;;;;QAKM,6CAAW;;;;;YAAlB;gBACE,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;aAChC;;oBAtEFC,cAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;qBAC/B;;;gCAMEC,WAAM;6BAKNC,UAAK;+BAILA,UAAK;+BAILA,UAAK;+BAgCLC,iBAAY,SAACC,WAAkB,EAAEC,eAAsB;;QAkB1D,8BAAC;KAvED;;;;;;AC7BA;;;;AAQA;QAAA;SAIoC;;oBAJnCC,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,uBAAuB,CAAC;wBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;qBACnC;;QACkC,2BAAC;KAJpC;;;;;;;;;;;;;;;;;;;;;;;;;"}
